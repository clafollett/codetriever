services:
  postgres:
    image: postgres:16-alpine
    container_name: codetriever-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=codetriever
      - POSTGRES_PASSWORD=codetriever
      - POSTGRES_DB=codetriever
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C
    volumes:
      - ${HOME}/.codetriever/postgres/data:/var/lib/postgresql/data:z
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U codetriever"]
      interval: 5s
      timeout: 3s
      retries: 5

  qdrant:
    image: qdrant/qdrant:latest
    container_name: codetriever-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ${HOME}/.codetriever/qdrant/storage:/qdrant/storage:z
    environment:
      - QDRANT__LOG_LEVEL=INFO
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/"]
      interval: 5s
      timeout: 3s
      retries: 5

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    container_name: codetriever-api
    ports:
      - "8080:8080"
    environment:
      - RUST_LOG=info
      - DATABASE_URL=postgresql://codetriever:codetriever@postgres/codetriever
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_COLLECTION=codetriever
      - EMBEDDING_MODEL=jinaai/jina-embeddings-v2-base-code
      - USE_METAL=false  # Metal not available in Docker
    volumes:
      - ${HOME}/.codetriever/cache:/app/cache
      - ${HOME}/.codetriever/repos:/app/repos:ro  # Read-only mount for code repositories
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      # TODO: Update when we implement a proper health endpoint
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 3s
      retries: 3

networks:
  default:
    name: codetriever-network